<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       <!-- If you are running in production, you will want to use JNDI connection -->
       <!--<jee:jndi-lookup id="dataSource" jndi-column="java:comp/env/jdbc/myapp"/>-->

       <!-- If you are running testcases, you might want to use JDBC instead -->
       <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="location">
                     <value>spring_hibernate/database.properties</value>
              </property>
       </bean>

       <!-- We use Apache Commons DBCP for a data source with connection pooling capability: -->
       <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
              <property name="driverClassName" value="${jdbc.driverClassName}" />
              <property name="url" value="${jdbc.url}" />
              <property name="username" value="${jdbc.username}" />
              <property name="password" value="${jdbc.password}" />
       </bean>

       <!-- Classic use of a datasource -->
       <!--
      <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
             <property column="driverClassName" value="${jdbc.driverClassName}" />
             <property column="url" value="${jdbc.url}" />
             <property column="username" value="${jdbc.username}" />
             <property column="password" value="${jdbc.password}" />
      </bean>
      -->
</beans>